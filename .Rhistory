install.packages("blogdown")
blogdown::install_hugo()
vocab <- create_vocabulary(it_all, ngram = c(1L, 2L))
shiny::runApp('Desktop/Projects/eu_disinformation/hackathon')
wordcloud(corpus, max.words = 30, width=20, height=20, min.freq=3, colors = pal2, scale=c(4,.5))
text <- all_claim_reviews$claimReviewed[all_claim_reviews$`@id` %in% reviews]
## make lower case
corpus <- tm_map(corpus, content_transformer(tolower))
## remove white space
corpus <- tm_map(corpus, stripWhitespace)
## remove numbers
corpus <- tm_map(corpus, removeNumbers)
## remove punctuation
corpus <- tm_map(corpus, removePunctuation)
pal2 <- brewer.pal(8,"Dark2")
par(bg="#343e48")
wordcloud(corpus, max.words = 30, width=20, height=20, min.freq=3, colors = pal2, scale=c(4,.5))
wordcloud(corpus, max.words = 30, width=20, height=20, min.freq=3, colors = pal2, scale=c(3,.5))
wordcloud(corpus, max.words = 30, width=20, height=20, min.freq=3, colors = pal2, scale=c(10,.5))
wordcloud(corpus, max.words = 30, width=20, height=20, min.freq=3, colors = pal2, scale=c(1,.5))
wordcloud(corpus, max.words = 30, width=20, height=20, min.freq=3, colors = pal2, scale=c(2,2))
wordcloud(corpus, max.words = 30, width=30, height=30, min.freq=3, colors = pal2, scale=c(2,2))
wordcloud(corpus, max.words = 30, width=50, height=30, min.freq=3, colors = pal2, scale=c(2,2))
wordcloud(corpus, max.words = 30, width=50, height=50, min.freq=3, colors = pal2, scale=c(2,2))
wordcloud(corpus, max.words = 30, width=50, height=50, min.freq=3, colors = pal2, scale=c(3,2))
wordcloud(corpus, max.words = 30, width=50, height=50, min.freq=3, colors = pal2, scale=c(3,4))
wordcloud(corpus, max.words = 30, width=50, height=50, min.freq=3, colors = pal2, scale=c(2,4))
wordcloud(corpus, max.words = 30, width=50, height=50, min.freq=3, colors = pal2, scale=c(2,2))
wordcloud(corpus, max.words = 30, width=50, height=40, min.freq=3, colors = pal2, scale=c(2,2))
runApp('Desktop/Projects/eu_disinformation/hackathon')
install.packages("shinythemes")
library(shinythemes)
runApp('Desktop/Projects/eu_disinformation/hackathon')
runApp('Desktop/Projects/eu_disinformation/hackathon')
runApp('Desktop/Projects/eu_disinformation/hackathon')
knitr::opts_chunk$set(echo = TRUE)
library(igraph)
library(igraphdata)
install.packages("igraph", "igraphdata")
data <- read_delim("Desktop/Projects/ds-peter/Dubsmash.com-EP-16.6kk-CloudLeak.txt",
":", escape_double = FALSE, trim_ws = TRUE)
library(readr)
data <- read_delim("Desktop/Projects/ds-peter/Dubsmash.com-EP-16.6kk-CloudLeak.txt",
":", escape_double = FALSE, trim_ws = TRUE)
data <- read_delim("Desktop/Projects/ds-peter/Dubsmash.com-EP-16.6kk-CloudLeak.txt",
":", escape_double = FALSE, trim_ws = TRUE, col_names = FALSE)
length(grep('qwerty?', data$X2, ignore.case=TRUE))
samples <- data$X2[1:10000]
length(grep('qwerty?', samples, ignore.case=TRUE))
grep('qwerty?', samples, ignore.case=TRUE)
samples[grep('qwerty?', samples, ignore.case=TRUE)]
length(grep('qwerty?', samples, ignore.case=TRUE))
238548/16232866
*100
238548/16232866
length(grep('azerty?', samples, ignore.case=TRUE))
length(grep('azerty?', data$X2, ignore.case=TRUE))
# 1,2,3 or other series
length(grep('1234?', data$X2, ignore.case=TRUE))
length(grep('abcd?', data$X2, ignore.case=TRUE))
length(grep('ABCD?', data$X2, ignore.case=TRUE))
# 1,2,3 or other series
head(grep('1234?', data$X2, ignore.case=TRUE))
# 1,2,3 or other series
head(grep('1234?', data$X2, ignore.case=TRUE))
# 1,2,3 or other series
head(grep('1234?', data$X2, ignore.case=TRUE))
# 1,2,3 or other series
head(data$X2[grep('1234?', data$X2, ignore.case=TRUE)])
head(data$X2[grep('abcs?', samples, ignore.case=TRUE)])
head(data$X2[grep('abcd?', samples, ignore.case=TRUE)])
data$X1[5]
data$X2[5]
data$X1[3]
data$X2[3]
data$X2[9]
data$X2[10]
data$X2[11]
data$X1[11]
data$X1[12]
data$X2[12]
knitr::opts_chunk$set(echo = TRUE)
plot(swpr$proj2,edge.width=E(swpr$proj2)$weight,vertex.color=cutree(swdend, k=2))
require(NetCluster)
require(gplots)
require(igraph)
require(gplots)
require(intergraph)
require(ergm)
require(blockmodeling)
swi<-read.csv("swn.csv",header=TRUE,row.names=1) # header = TRUE uses the first row as the column names; row.names = 1 uses the first column as the row names (if we put row.names = 2, it would use the second column, etc.)
swi<-as.matrix(swi)
swn<-graph.incidence(swi)
plot(swn)
swpr=bipartite.projection(swn)
plot(swpr$proj2,edge.width=E(swpr$proj2)$weight)
corrplot::corrplot(cor(swi), type = "upper")
as.dist(1-cor(swi),upper=TRUE) ## This is our matrix of dissimilarity. upper=TRUE just means that it is currently showing us the dissimilarities both above and below the diagonal. We don't actually need that for the analyses, so you'll see that its removed below. as.dist() isn't changing the calculation at all, it's just telling R how to treat the object.
as.dist(1-cor(swi),upper=TRUE)
swdend<-hclust(as.dist(1-cor(swi)))
plot(swdend)
plot(swpr$proj2,edge.width=E(swpr$proj2)$weight,vertex.color=cutree(swdend, k=2))
setwd("~/Desktop/Projects/just-another-ds-blog")
blogdown::serve_site()
blogdown::serve_site()
servr::daemon_stop(2)
blogdown::serve_site()
servr::daemon_stop(1)
blogdown::serve_site()
